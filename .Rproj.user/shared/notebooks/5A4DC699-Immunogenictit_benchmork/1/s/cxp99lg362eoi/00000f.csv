"0","#python"
"0","def netMHCIIpan_process(result,allele,ori_sorted,peptide):"
"0","    "
"0","    #combine two type allele"
"0","    result = pd.merge(result,allele,left_on=""allele"",right_on=""Allele Name"")"
"0","    result_sorted = result.sort_values(by=[""peptide"",""HLA""]).reset_index(drop = True)"
"0","    #combine with ori data"
"0","    result_combined = pd.merge(result_sorted,ori_sorted[[""pep"",""pep_ID""]],left_on = ""peptide"",right_on =""pep"")"
"0","    #result_combined[""pep_length""] = result_combined[""peptide""].map(len)"
"0","    sam_pep_ID = result_combined[""pep_ID""].unique()"
"0","    res = []"
"0","    p_ID = []"
"0","    for a in sam_pep_ID:"
"0","        Mean = []"
"0","        ID = result_combined[result_combined[""pep_ID""] == a]"
"0","        #get Mean of all splited pep and Max of all HLA"
"0","        for i in ID[""Allele Name""].unique():"
"0","            Data_HLA = ID[ID[""Allele Name""] == i]"
"0","            prediction = []"
"0","            for l in Data_HLA[""pep_length""].unique():"
"0","                Data_len = Data_HLA[Data_HLA[""pep_length""] == l]"
"0","                pre = Data_len[""percentile_rank""].min()"
"0","                prediction.append(pre)"
"0","            x = np.min(prediction)"
"0","        res.append(np.min(x))"
"0","        p_ID.append(a) "
"0","    final_result = pd.DataFrame({""pep_ID"":p_ID,""prediction"":res})"
"0","    final_result = final_result.merge(peptide,how = ""inner"",on = ""pep_ID"" )"
"0","    return final_result "
