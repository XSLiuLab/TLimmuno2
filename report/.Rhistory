geom_text(data=df2,aes(x=x,y=y,label = family))+
geom_hline(yintercept=0,
color = "red", size=1)+labs(y = "")
p3 <- p1 + p2 + plot_layout(widths = c(1, 8))
}
p2 <- get_f1(neo_nes,pancancer_p = 0.0005,
dt2 = neo_nes_summ,median_es = median(neo_nes$es))
p2
ggsave("../figure/immuno_edit.pdf",width = 12,height = 5,dpi = 300)
#R
neo_nes <- readRDS("../data/neo_es.rds")
sim_all <- readRDS("../data/sim_add_cancer.rds")
sim_all %>%
group_by(cancer,sim_num) %>%
summarise(median_es=median(es)) -> summ2
neo_nes$cancer <- get_cancer_type(neo_nes$sample)
neo_nes_summ <- neo_nes %>%
group_by(cancer) %>% summarise(median_es=median(es))
sim_all %>%
group_by(sim_num) %>%
summarise(median_es=median(es)) -> summ
p <- WVPlots::ShadedDensity(frame = summ,
xvar = "median_es",
threshold = median(neo_nes$es),
title = "",
tail = "left")
p$layers[[1]]$aes_params$colour <- "red"
p$layers[[1]]$aes_params$size <- 1
p$layers[[2]]$aes_params$fill <- "blue"     #geom_ribbon
p$layers[[3]]$aes_params$colour <- "black"
p$layers[[3]]$aes_params$size <- 1
#p$layers[[4]]$aes_params$label <- "Actual median ES" #geom_text
p1 <- p + labs(x="Simulation median es")+
theme_prism()
p1
ggsave("../figure/null_dis.pdf")
##cancer type
neo_nes_summ <- neo_nes_summ %>%
rowwise() %>%
mutate(p=mean(summ2$median_es[summ2$cancer==cancer] <= median_es))
get_f1 <- function(dt,pancancer_p,dt2,median_es){
p1 <- ggplot(data=dt,aes(x=1,y=es))+
geom_violin(alpha=0.7,width=0.5)+
geom_boxplot(width=0.2)+
theme_prism()+
labs(x=paste0("median es = ",round(median_es,digits = 3),"\n n = ",nrow(dt)),y = "ESccf",size=5)+
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())+
theme(text = element_text(size = 10))+
annotate(geom="text", x=1, y=1.1, label=paste0("p = ",pancancer_p),
color="red",size=4)
dt$cancer <- get_cancer_type(dt$sample)
dt %>% group_by(cancer) %>%
summarise(median_est=median(es),c=n()) %>%
arrange(median_est) %>%
mutate(label=paste0(cancer,"\n(n=",c,")"))-> summ1
summ1 <- left_join(summ1,dt2 %>% select(cancer,p))
summ1$p <- signif(summ1$p,digits = 1)
summ1 <- summ1 %>%
mutate(sig=case_when(
p <= 0.05 & p > 0.01 ~ "*",
p < 0.01 ~ "**",
TRUE ~ "ns"
))
dt <- left_join(dt,summ1)
dt$label <- factor(dt$label,levels = summ1$label)
df2 <- data.frame(x = 1:nrow(summ1), y = 1.1, family = summ1$sig)
p2 <- ggplot(data=dt,aes(x=label,y=es))+
geom_boxplot()+
theme_prism()+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45,vjust = 1, hjust = 1))+
theme(text = element_text(size = 7))+
geom_text(data=df2,aes(x=x,y=y,label = family))+
geom_hline(yintercept=0,
color = "red", size=1)+labs(y = "")
p3 <- p1 + p2 + plot_layout(widths = c(1, 8))
}
p2 <- get_f1(neo_nes,pancancer_p = 0.0005,
dt2 = neo_nes_summ,median_es = median(neo_nes$es))
p2
ggsave("../figure/immuno_edit.pdf",width = 12,height = 5,dpi = 300)
sim_all <- readRDS("../data/net_sim_add_cancer.rds")
neo_nes <- readRDS("../data/net_neo_es.rds")
sim_all %>%
group_by(cancer,sim_num) %>%
summarise(median_es=median(es)) -> summ2
#> `summarise()` has grouped output by 'cancer'. You can override using the
#> `.groups` argument.
neo_nes$cancer <- get_cancer_type(neo_nes$sample)
neo_nes_summ <- neo_nes %>%
group_by(cancer) %>% summarise(median_es=median(es))
sim_all %>%
group_by(sim_num) %>%
summarise(median_es=median(es)) -> summ
p <- WVPlots::ShadedDensity(frame = summ,
xvar = "median_es",
threshold = median(neo_nes$es),
title = "",
tail = "left")
p$layers[[1]]$aes_params$colour <- "red"
p$layers[[1]]$aes_params$size <- 1
p$layers[[2]]$aes_params$fill <- "blue"     #geom_ribbon
p$layers[[3]]$aes_params$colour <- "black"
p$layers[[3]]$aes_params$size <- 1
#p$layers[[4]]$aes_params$label <- "Actual median ES" #geom_text
p1 <- p + labs(x="Simulation median es")+
theme_prism()
p1
ggsave("../figure/net_null_dis.pdf")
##cancer type
neo_nes_summ <- neo_nes_summ %>%
rowwise() %>%
mutate(p=mean(summ2$median_es[summ2$cancer==cancer] <= median_es))
get_f1 <- function(dt,pancancer_p,dt2,median_es){
p1 <- ggplot(data=dt,aes(x=1,y=es))+
geom_violin(alpha=0.7,width=0.5)+
geom_boxplot(width=0.2)+
theme_prism()+
labs(x=paste0("median es = ",round(median_es,digits = 3),"\n n = ",nrow(dt)),size=7)+
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank())+
theme(text = element_text(size = 10))+
annotate(geom="text", x=1, y=1.1, label=paste0("p = ",pancancer_p),
color="red",size=4)+labs(y = "ESccf",size = 8)
dt$cancer <- get_cancer_type(dt$sample)
dt %>% group_by(cancer) %>%
summarise(median_est=median(es),c=n()) %>%
arrange(median_est) %>%
mutate(label=paste0(cancer,"\n(n=",c,")"))-> summ1
summ1 <- left_join(summ1,dt2 %>% select(cancer,p))
summ1$p <- signif(summ1$p,digits = 1)
summ1 <- summ1 %>%
mutate(sig=case_when(
p <= 0.05 & p > 0.01 ~ "*",
p < 0.01 ~ "**",
TRUE ~ "ns"
))
dt <- left_join(dt,summ1)
dt$label <- factor(dt$label,levels = summ1$label)
df2 <- data.frame(x = 1:nrow(summ1), y = 1.1, family = summ1$sig)
p2 <- ggplot(data=dt,aes(x=label,y=es))+
geom_boxplot()+
theme_prism()+
theme(axis.title.x = element_blank())+
theme(axis.text.x = element_text(angle = 45,vjust = 1, hjust = 1))+
theme(text = element_text(size = 7))+
geom_text(data=df2,aes(x=x,y=y,label = family))+
geom_hline(yintercept=0,
color = "red", size=1)+labs(y = "")
p3 <- p1 + p2 + plot_layout(widths = c(1, 8))
}
p2 <- get_f1(neo_nes,pancancer_p = 0.0005,
dt2 = neo_nes_summ,median_es = median(neo_nes$es))
p2
ggsave("../figure/net_immunoediting.pdf",width = 12,height = 5,dpi = 300)
MHCI_detail <- readRDS("~/Data/MHCI_detail.rds")
library(dplyr)
library(ggplot2)
library(ggprism)
MHCIBA_IMM <- readRDS("~/Project/Documenet/TLIMM2pred/data/MHCIBA_IMM.rds")
MHCIIBA_IMM <- readRDS("~/Project/Documenet/TLIMM2pred/data/MHCIIBA_IMM.rds")
library(stringr)
library(ggpubr)
library(ggprism)
View(MHCIBA_IMM)
cor.test(x = c(1,2,3),y = c(7,3,4))
a <- cor.test(x = c(1,2,3),y = c(7,3,4))
View(a)
a$p.value
a$estimate
a$estimate{1}
a$estimate[1]
unique(MHCIBA_IMM$sample_barcode)
MHCIBA_IMM[MHCIBA_IMM$sample_barcode == "TCGA-5L-AAT0",]
a$estimate
unlist(a$estimate)
a$p.value
r = c()
p = c()
for (i in unique(MHCIBA_IMM$sample_barcode)) {
sam <- MHCIBA_IMM[MHCIBA_IMM$sample_barcode == i,]
cor_test = cor.test(sam$MHCI_BA_Rank,IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
r = c()
p = c()
for (i in unique(MHCIBA_IMM$sample_barcode)) {
sam <- MHCIBA_IMM[MHCIBA_IMM$sample_barcode == i,]
cor_test = cor.test(sam$MHCI_BA_Rank,sam$IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
View(sam)
MHCIBA_IMM <- na.omit(MHCIBA_IMM)
MHCIIBA_IMM <- na.omit(MHCIIBA_IMM)
r = c()
p = c()
for (i in unique(MHCIBA_IMM$sample_barcode)) {
sam <- MHCIBA_IMM[MHCIBA_IMM$sample_barcode == i,]
cor_test = cor.test(sam$MHCI_BA_Rank,sam$IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
View(sam)
cor.test()
?cor.test
cor.test(c(1,2),c(3,4))
r = c()
p = c()
for (i in unique(MHCIBA_IMM$sample_barcode)) {
sam <- MHCIBA_IMM[MHCIBA_IMM$sample_barcode == i,]
if (length(sam)<=2) {
next
}
cor_test = cor.test(sam$MHCI_BA_Rank,sam$IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
?next
if (length(sam)<=2) {
next
}
length(sam)<=2
length(sam)
View(sam)
sam
ncol(sam)
nrow(sam)
r = c()
p = c()
for (i in unique(MHCIBA_IMM$sample_barcode)) {
sam <- MHCIBA_IMM[MHCIBA_IMM$sample_barcode == i,]
if (nrow(sam)<=2) {
next
}
cor_test = cor.test(sam$MHCI_BA_Rank,sam$IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
summarise(p)
summary(p)
x <- tibble(r,p)
x
ggplot(x,aes(r,)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(x,aes(p)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
median(p)
View(MHCIIBA_IMM)
r = c()
p = c()
for (i in unique(MHCIIBA_IMM$sample_barcode)) {
sam <- MHCIBA_IMM[MHCIBA_IMM$sample_barcode == i,]
if (nrow(sam)<=2) {
next
}
cor_test = cor.test(sam$MHCII_BA_Rank/100,sam$IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
r = c()
p = c()
for (i in unique(MHCIIBA_IMM$sample_barcode)) {
sam <- MHCIIBA_IMM[MHCIIBA_IMM$sample_barcode == i,]
if (nrow(sam)<=2) {
next
}
cor_test = cor.test(sam$MHCII_BA_Rank/100,sam$IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
x <- tibble(r,p)
ggplot(x,aes(r)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(x,aes(p)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
c(1,2)*c(1,2)
r2 <- r*r
ggplot(x,aes(r2)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
median(p)
mean(r)
mean(r2)
?rename
rename(MHCIBA_IMM,BA_Rank = MHCI_BA_Rank)
MHCIBA_IMM <- rename(MHCIBA_IMM,BA_Rank = MHCI_BA_Rank)
MHCIIBA_IMM <- rename(MHCIIBA_IMM,BA_Rank = MHCII_BA_Rank)
p
p.adjust(p, method = "BH")
ggplot(x,aes(p.adjust(p, method = "BH"))) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
split_sample <- function(data) {
r = c()
p = c()
for (i in unique(data$sample_barcode)) {
sam <- data[data$sample_barcode == i,]
if (nrow(sam)<=2) {
next
}
cor_test = cor.test(sam$BA_Rank/100,sam$IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
r2 <- r*r
padj <- p.adjust(p, method = "BH")
x <- tibble(r,p,r2,padj)
return(x)
}
MHCI <- split_sample(MHCIBA_IMM)
MHCII <- split_sample(MHCIIBA_IMM)
View(MHCI)
MHCIBA_IMM <- readRDS("~/Project/Documenet/TLIMM2pred/data/MHCIBA_IMM.rds")
MHCIIBA_IMM <- readRDS("~/Project/Documenet/TLIMM2pred/data/MHCIIBA_IMM.rds")
MHCIBA_IMM <- na.omit(MHCIBA_IMM)
MHCIIBA_IMM <- na.omit(MHCIIBA_IMM)
MHCIBA_IMM <- rename(MHCIBA_IMM,BA_Rank = MHCI_BA_Rank)
MHCIIBA_IMM <- rename(MHCIIBA_IMM,BA_Rank = MHCII_BA_Rank)
split_sample <- function(data) {
r = c()
p = c()
for (i in unique(data$sample_barcode)) {
sam <- data[data$sample_barcode == i,]
if (nrow(sam)<=2) {
next
}
cor_test = cor.test(sam$BA_Rank/100,sam$IMM_Rank)
r <- c(r,cor_test$estimate)
p <- c(p,cor_test$p.value)
}
r2 <- r*r
padj <- p.adjust(p, method = "BH")
x <- tibble(r,p,r2,padj)
return(x)
}
MHCI <- split_sample(MHCIBA_IMM)
MHCI$method <- "MHCI"
View(MHCI)
MHCII <- split_sample(MHCIIBA_IMM)
MHCII$method <- "MHCII"
result <- rbind(MHCI,MHCII)
View(result)
ggplot(result,aes(r,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(result,aes(r2,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(result,aes(padj,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
test <- result %>% filter(method == "MHCI") %>% filter(padj<=0.05)
View(test)
test <- result %>% filter(method == "MHCII") %>% filter(padj<=0.05)
result <- result %>% filter(padj<=0.05)
ggplot(result,aes(r,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(result,aes(r2,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(result,aes(padj,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(result,aes(r,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(result,aes(r2,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(result,aes(padj,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()
ggplot(result,aes(r,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw() + theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),legend.position="none")
result <- rbind(MHCI,MHCII)
ggplot(result,aes(r,fill = method)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw() + theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),legend.position="none")
ggplot(result,aes(r,fill = method)) +
geom_density(alpha = 0.6) + theme_bw() + theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),legend.position="none")
ggplot(result,aes(r,fill = method)) +
geom_density(alpha = 0.6) + theme_bw() + theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
MHCI$Type <- "MHCI"
MHCII$Type <- "MHCII"
result <- rbind(MHCI,MHCII)
ggplot(result,aes(r,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw() + theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(result,aes(r2,fill = Type)) +
geom_density(alpha = 0.6) +
geom_rug() + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(result,aes(padj,fill = method)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
expression(R[2])
ggplot(result,aes(r2,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+labels(x = expression(R[2]))
ggplot(result,aes(r2,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+labels(x = expression("R"[2]))
expression("R"[2])
expression()
?expression
ggplot(result,aes(r2,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+xlab(bquote(CO[2]^-2))
ggplot(result,aes(r2,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+xlab(bquote(R^2))
ggplot(result,aes(padj,fill = method)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
p <- c(p,cor_test$p.value)
ggplot(result,aes(r2,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+xlab(bquote(R^2),fontsize = 14)
ggplot(result,aes(r2,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+xlab(bquote(R^2),size = 14)
setwd("~/Project/Documenet/TLIMM2pred/report")
ggplot(result,aes(r,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw() + theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggsave("../figure/BA_IMM_r.pdf",dpi = 300,width = 6,height = 6)
ggplot(result,aes(r2,fill = Type)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+xlab(bquote(R^2))
ggsave("../figure/BA_IMM_r2.pdf",dpi = 300,width = 6,height = 6)
ggplot(result,aes(padj,fill = method)) +
geom_density(alpha = 0.6) + theme_bw()+ theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggsave("../figure/BA_IMM_padj.pdf",dpi = 300,width = 6,height = 6)
library(readr)
library(dplyr)
library(NeoEnrichment)
library(ggplot2)
library(ggprism)
library(ggpubr)
library(patchwork)
library(reticulate)
use_python(Sys.which("python"))
reticulate::repl_python()
windowsFonts()
reticulate::repl_python()
full_join
reticulate::repl_python()
